var documenterSearchIndex = {"docs":
[{"location":"#G25Tools","page":"G25Tools","title":"G25Tools","text":"","category":"section"},{"location":"","page":"G25Tools","title":"G25Tools","text":"","category":"page"},{"location":"#Contents","page":"G25Tools","title":"Contents","text":"","category":"section"},{"location":"#G25Tools.Distances","page":"G25Tools","title":"G25Tools.Distances","text":"Distances\n\nHolds the distances from multiple source samples to a single\ntarget sample. Each source sample consists of a name and it's\nG25 distance to the target sample.\n\n\n\n\n\n","category":"type"},{"location":"#G25Tools.Population","page":"G25Tools","title":"G25Tools.Population","text":"Population\n\nRepresents a population. Each population consists of a name,\nfor example \"Viking\", and a list of samples in G25 format.\n\n\n\n\n\n","category":"type"},{"location":"#G25Tools._cluster-Tuple{Integer, Array{Integer}, Any, Any}","page":"G25Tools","title":"G25Tools._cluster","text":"_cluster(index::Integer, indices::Integer[], distancematrix, distance)\n\nReturn all indices that cluster with the index index.    \n\n\n\n\n\n","category":"method"},{"location":"#G25Tools._getmarkers-Tuple{Integer}","page":"G25Tools","title":"G25Tools._getmarkers","text":"_getmarkers(n::Integer; smile = false)\n\nCreate a set of n markers for a plot. If smile == true the last marker is a smiley.\n\nReturn a named tuple (markers, colors) that contains an array of markers and an array of colors for the plot.\n\n\n\n\n\n","category":"method"},{"location":"#G25Tools._select-Tuple{Any, Any, Any}","page":"G25Tools","title":"G25Tools._select","text":"_select(samples::DataFrame, distance, neighbors)\n\nSelect those samples that have at least the given number of neighbors within the given distance. The distancematrix consists of sample indices and their distances to each other.\n\nReturn an array sample indices that satisfy the given conditions.\n\n\n\n\n\n","category":"method"},{"location":"#G25Tools.average-Tuple{DataFrames.DataFrame}","page":"G25Tools","title":"G25Tools.average","text":"average(samples::DataFrame, name = \"Average\")\n\nCalculate the mean average of a DataFrame of samples in G25 format.\n\nReturn the average as a vector of G25 coordinates where the first entry is the given name, usually the name of the given population.\n\n\n\n\n\n","category":"method"},{"location":"#G25Tools.clusters-Tuple{DataFrames.DataFrame}","page":"G25Tools","title":"G25Tools.clusters","text":"clusters(samples::DataFrame; distance = 0.1, neighbors = 1)\n\nFind clusters in a set of samples that satisfy the given conditions. Within each cluster the nearest neighbor of a sample must be within distance and each sample must have a minumum number of neighbors that is given by neighbors.\n\nReturn an array of Populations where each Population represents one cluster. If no cluster could be found an empty array is returned.\n\nXXX Currently each sample may appear in only one cluster, which can lead to strange results. Also samples at the fringe of a cluster are sometimes cut off if they do not have enough neighbors. Performance is rather poor for large sample sizes. About 6 seconds for 500 samples on my rather old computer. 24 seconds for 600 samples.\n\n\n\n\n\n","category":"method"},{"location":"#G25Tools.distance-Tuple{DataFrames.DataFrameRow, DataFrames.DataFrameRow}","page":"G25Tools","title":"G25Tools.distance","text":"distance(source::DataFrameRow, target::DataFrameRow)\n\nReturn the vector distance between two samples with G25 coordinates. Both source and target must be in the form: [\"Name\", PC1,...PC25] where Name is a String and PC1 to PC25 are the G25 coordinates of the sample. Additional fields are allowed because only [2:26] are used to calculate the distance.\n\n\n\n\n\n","category":"method"},{"location":"#G25Tools.distance-Tuple{Vector, Vector}","page":"G25Tools","title":"G25Tools.distance","text":"distance(source::Vector, target::Vector)\n\nReturn the vector distance between two samples with G25 coordinates. Both source and target must be in the form: [\"Name\", PC1,...PC25] where Name is a String and PC1 to PC25 are the G25 coordinates of the sample. Additional fields are allowed because only [2:26] are used to calculate the distance.\n\n\n\n\n\n","category":"method"},{"location":"#G25Tools.distances-Tuple{DataFrames.DataFrame, DataFrames.DataFrameRow}","page":"G25Tools","title":"G25Tools.distances","text":"distances(source::DataFrame, target::DataFrameRow)\n\nCalculate the G25 vector distances from a list of samples (source) to a single target.\n\nReturn a DataFrame containing the distances to the target. Each row consists of the source name and the distance to the target. The table is ordered, smallest distances come first.\n\n\n\n\n\n","category":"method"},{"location":"#G25Tools.distances-Tuple{DataFrames.DataFrame, DataFrames.DataFrame}","page":"G25Tools","title":"G25Tools.distances","text":"distances(source::DataFrame, target::DataFrame)\n\nCalculate the G25 vector distances from a list of samples (source) to multiple target samples.\n\nThe source and the target contain a DataFrame in G25 format.\n\nReturn a vector of Distances where each entry contains the Distances of a single target sample to all source samples.\n\n\n\n\n\n","category":"method"},{"location":"#G25Tools.distances-Tuple{DataFrames.DataFrame, Vector}","page":"G25Tools","title":"G25Tools.distances","text":"distances(source::DataFrame, target::Vector)\n\nCalculate the distances between samples in a DataFrame and a single target sample.\n\n\n\n\n\n","category":"method"},{"location":"#G25Tools.extractG25-Tuple{AbstractString, AbstractString}","page":"G25Tools","title":"G25Tools.extractG25","text":"extractG25(filename::AbstractString, to::AbstractString; cols = String[])\n\nExtract G25 data from the main file and save it locally to disk. The main file can be found at: https://www.exploreyourdna.com/ancient-samples.aspx\n\nThe G25 data is a simplified version of the main file which ir rather large to work with. Also some population data is only available in the simplified format.\n\nThe parameter cols can be used to add extra columns from the main file, for example it may be useful to add GPS coordinates. Just add the column titles as a String array.\n\n\n\n\n\n","category":"method"},{"location":"#G25Tools.extractG25-Tuple{AbstractString}","page":"G25Tools","title":"G25Tools.extractG25","text":"extractG25(filename::AbstractString; cols = String[])\n\nExtract G25 data from the main file of ancient samples. The main file can be found at: https://www.exploreyourdna.com/ancient-samples.aspx\n\nReturn a DataFrame in a simplified format that represents samples as Names and their G25 coordinates.\n\nThe parameter cols can be used to add extra columns from the main file, for example it may be useful to add GPS coordinates. Just add the column titles as a String array.\n\n\n\n\n\n","category":"method"},{"location":"#G25Tools.extractG25-Tuple{DataFrames.AbstractDataFrame}","page":"G25Tools","title":"G25Tools.extractG25","text":"function extractG25(from::AbstractDataFrame; cols = String[])\n\nExtract G25 data from a DataFrame that is in the form of the main file of ancient samples. The main file can be found at: https://www.exploreyourdna.com/ancient-samples.aspx\n\nReturn a DataFrame in a simplified format that represents samples as Names and their G25 coordinates.\n\nThe parameter cols can be used to add extra columns from the main file, for example it may be useful to add GPS coordinates. Just add the column titles as a String array like cols = [\"Lat.\", \"Long.\"].\n\n\n\n\n\n","category":"method"},{"location":"#G25Tools.getyear-Tuple{Any}","page":"G25Tools","title":"G25Tools.getyear","text":"getyear(samplename)\n\nGets the year from a sample name in Davidskis format. Davidski encodes the year in the sample name with a pattern like BC_50 or AD_450.\n\nReturns the year or nothing if the year is not encoded.\n\n\n\n\n\n","category":"method"},{"location":"#G25Tools.medianavg-Tuple{DataFrames.DataFrame}","page":"G25Tools","title":"G25Tools.medianavg","text":"median(samples::DataFrame; name = \"Median\")\n\nCalculate the median average of a DataFrame of samples in G25 format.\n\nReturn the median average as a vector of G25 coordinates where the first entry is the given name, usually the name of the given population.\n\nThis method may be better suited than the mean aveerage for small sample sizes that include outliers.\n\n\n\n\n\n","category":"method"},{"location":"#G25Tools.picksamples-Tuple{DataFrames.AbstractDataFrame}","page":"G25Tools","title":"G25Tools.picksamples","text":"function picksamples(samples::AbstractDataFrame; populations = String[], timeperiod = [-Inf, Inf])\n\nPick a table of samples belonging to certain populations and/or a time persiod. Example: picksamples(samples, populations=[\"Germany\", \"England\"], timeperiod=[0, 500])\n\nFor more advanced filtering options use DataFrames' subset() or filter() methods.\n\n\n\n\n\n","category":"method"},{"location":"#G25Tools.plotpca-Tuple{Array{Population}}","page":"G25Tools","title":"G25Tools.plotpca","text":"plotpca(populations::Array{Population}; title = \"PCA Plot\", smile = false)\n\nPlot all populations. The names of the populations are used in the plot legend. If smile == true the last marker is a smiley.\n\nThis method generates a label for each population.\n\n\n\n\n\n","category":"method"},{"location":"#G25Tools.plotpca-Tuple{DataFrames.DataFrame}","page":"G25Tools","title":"G25Tools.plotpca","text":"plotpca(samples::DataFrame)\n\nPlot all samples in a given DataFrame. The DataFrame must be in the G25 format: Name followed by PC1,...PC25. If smile == true the last marker is a smiley.\n\nThis method generates a label for each sample.\n\n\n\n\n\n","category":"method"},{"location":"#G25Tools.readG25-Tuple{Any}","page":"G25Tools","title":"G25Tools.readG25","text":"readG25(filename)\n\nRead a DataFrame containing a list of samples with G25 coordinates. Each row must begin with the sample name followed by their G25 coordinates. Example: Name,PC1,PC2,...PC25\n\n\n\n\n\n","category":"method"},{"location":"#G25Tools.writedistances-Tuple{Any, Any, DataFrames.DataFrame}","page":"G25Tools","title":"G25Tools.writedistances","text":"write(directory, filename, distances)\n\nWrite a DataFrame in G25 format to a specific directory. This is a convenience function that is most useful when writing multile files to a single directory.\n\n\n\n\n\n","category":"method"},{"location":"#Index","page":"G25Tools","title":"Index","text":"","category":"section"},{"location":"","page":"G25Tools","title":"G25Tools","text":"","category":"page"}]
}
